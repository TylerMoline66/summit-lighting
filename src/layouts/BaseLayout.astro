---
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
const { title = "My Website" } = Astro.props;
---
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="/global.css" />
  </head>
  <body>
    <Navbar />
    <main>
      <slot /> <!-- Page content goes here -->
    </main>
    <Footer />
  </body>
</html>

<script>
  // Scroll-triggered animations using IntersectionObserver
  function initScrollAnimations() {
    const animatedElements = document.querySelectorAll('.animate-on-scroll');
    
    if (animatedElements.length === 0) return;
    
    // Create intersection observer
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          // Add a small delay for staggered effect
          const delay = Array.from(animatedElements).indexOf(entry.target) * 100;
          setTimeout(() => {
            entry.target.classList.add('in-view');
          }, delay);
          
          // Stop observing this element once it's animated
          observer.unobserve(entry.target);
        }
      });
    }, {
      // Trigger when element is 20% visible
      threshold: 0.2,
      // Start animation when element is 50px from viewport
      rootMargin: '50px 0px -50px 0px'
    });
    
    // Start observing all animated elements
    animatedElements.forEach((element) => {
      observer.observe(element);
    });
  }
  
  // Initialize animations when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    initScrollAnimations();
  });
  
  // Re-initialize on page navigation (for SPA-like behavior)
  document.addEventListener('astro:page-load', () => {
    initScrollAnimations();
  });
  
  // FAQ Toggle Function
  window.toggleFAQ = function(button) {
    const faqItem = button.closest('.faq-item');
    const isActive = faqItem.classList.contains('active');
    
    // Close all other FAQ items
    document.querySelectorAll('.faq-item').forEach(item => {
      if (item !== faqItem) {
        item.classList.remove('active');
      }
    });
    
    // Toggle current FAQ item
    if (isActive) {
      faqItem.classList.remove('active');
    } else {
      faqItem.classList.add('active');
    }
  };
</script>

